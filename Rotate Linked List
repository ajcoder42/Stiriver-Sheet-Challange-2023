//coding ninjas studio solutions

/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     // Write your code here.

     if(!head || !head->next || k==0) return head;
     int len= 1;
     Node* last= head;
     while(last->next) 
     {
          len++;
          last= last->next;
     }
     k%=len;

// Brute force
     // while(k--)
     // {
     //      Node* temp1= head;
     //      Node* temp2= head;
     //      while(temp1->next)
     //      {
     //           temp2= temp1;
     //           temp1= temp1->next;
     //      }
     //      temp2->next= NULL;
     //      temp1->next= head;
     //      head= temp1;
     // }
     // return head;


     int c= len - k;
     last->next= head;

     while(c--)
     {
         last= last->next;
     }

     head= last->next;
     last->next= NULL;

     return head;
}
